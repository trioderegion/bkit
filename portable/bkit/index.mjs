import'./common/lib/index.js';class CustomDocIndex{static augmentIndex(){const{_indexCompendium,_indexWorldCollection,_indexEmbeddedDocuments}=game.documentIndex;game.documentIndex._indexCompendium=function(pack){game.settings.get('bkit','docIndexPackages').has(pack.metadata.packageName)&&_indexCompendium.call(game.documentIndex,pack)},game.documentIndex._indexEmbeddedDocuments=function(parent){game.settings.get('bkit','docIndexPackages').has('embedded')&&_indexEmbeddedDocuments.call(game.documentIndex,parent)},game.documentIndex._indexWorldCollection=function(documentName){game.settings.get('bkit','docIndexPackages').has('world')&&_indexWorldCollection.call(game.documentIndex,documentName)}}static{Hooks.on('setup',(()=>{const packages=game.getPackageScopes().filter((e=>'core'!==e));packages.push('embedded');const choices=Object.fromEntries(packages.map((scope=>[scope,scope])));game.settings.register('bkit','docIndexPackages',{name:'Document Index Sources',hint:'Defines packages to be added to the Document Index',scope:'user',config:!0,type:new foundry.data.fields.SetField(new foundry.data.fields.StringField({choices})),default:packages,onChange:_=>{Object.keys(game.documentIndex.trees).forEach((tree=>delete game.documentIndex.trees[tree])),Object.keys(game.documentIndex.uuids).forEach((uuid=>delete game.documentIndex.uuids[uuid])),game.documentIndex.index().then((_=>{ui.notifications.info('Document Index replaced.')}))}}),this.augmentIndex()}))}}class ExtractorBase{genID(name,prefix=""){const id=`${prefix}${name.slugify({lowercase:!1,replacement:'',strict:!0})}`;return id.length>=16?id.substring(0,16):id.padEnd(16,'F')}async validateTarget({id,type,target}){const context={pack:null,parent:null},targetParts=target.split('|');switch(targetParts.at(0)){case'PACK':context.pack=targetParts.at(1);break;case'SHEET':context.parent=await fromUuid(targetParts.at(1))}const uuid=foundry.utils.buildUuid({id,documentName:type,...context});if(await fromUuid(uuid)){throw ui.notifications.error(`Putative UUID already exists! [${uuid}]`),new Error(`Putative UUID already exists! [${uuid}]`)}return context}parseRange(range=""){let[lower,upper]=range.split('–').flatMap((p=>p.split('-')));return'00'==lower&&(lower='100'),'00'==upper&&(upper='100'),upper??=lower,console.log(upper,lower),lower=Number(lower),upper=Number(upper),isNaN(lower)||isNaN(upper)?[NaN,NaN]:[lower,upper]}async promptContext(type="Item",options={}){options=foundry.utils.mergeObject(game.user.getFlag('bkit',`${type}-extractor`)??{},options);const targets={'WORLD':'World'},ourPacks=this.unlockedPacks(),openSheets=this.openSheets();ourPacks.forEach((info=>targets['PACK|'+info.id]=`${info.label} (${info.packageName})`)),openSheets.forEach((doc=>targets['SHEET|'+doc.uuid]=doc.name));const content=`<fieldset>${[new foundry.data.fields.StringField({label:'Document Prefix'}).toFormGroup({},{name:'prefix',value:options.prefix}).outerHTML,new foundry.data.fields.StringField({label:'Target Collection'}).toFormGroup({},{name:'target',value:options.target??'WORLD',choices:targets}).outerHTML].join('')}</fieldset>`,answer=await foundry.applications.api.DialogV2.prompt({content,title:'Document Extraction Context',ok:{callback:(event,button)=>new foundry.applications.ux.FormDataExtended(button.form).object},rejectClose:!0}),result=foundry.utils.mergeObject(options,answer);return await game.user.setFlag('bkit',`${type}-extractor`,result),result}unlockedPacks(type="Item"){return game.packs.filter((p=>!p.config.locked&&p.metadata.type===type)).map((p=>p.metadata))}openSheets(type="Item"){const collectionField=CONFIG[type].documentClass.metadata.collection;return collectionField?Array.from(foundry.applications.instances.values()).filter((app=>app.document?.collections[collectionField])).map((app=>app.document)):[]}getSelection(){const selection=window.getSelection();if("Range"!==selection.type){return void ui.notifications.error("No Range selected for document extraction!")}if(selection.anchorOffset>selection.extentOffset){return void ui.notifications.warn("Please select top to bottom.")}selection.modify("extend","right","lineboundary");const initialRange=selection.getRangeAt(0),start="P"==initialRange.commonAncestorContainer.nodeName?initialRange.commonAncestorContainer:selection.anchorNode.parentElement;return selection.setBaseAndExtent(start,0,selection.extentNode,selection.extentOffset),{range:selection.getRangeAt(0)}}}class PageSplitter extends ExtractorBase{static{Hooks.on('bkit.extractorEntries',(entries=>{entries.push({title:'Split Headers',action:'split-headers',cmd:(state,dispatch,view)=>{const element=view.dom.closest('prose-mirror'),pageuuid=element?.dataset?.documentUuid;(new this).split({pageuuid})}})}))}async split({pageuuid=null,targetuuid=null,level=null,type="text"}){const content=`<fieldset>${[new foundry.data.fields.StringField({label:'Page to Split'}).toFormGroup({},{name:'pageuuid',value:pageuuid}).outerHTML,new foundry.data.fields.DocumentUUIDField({label:'Target Journal'}).toFormGroup({},{name:'targetuuid',value:targetuuid}).outerHTML,new foundry.data.fields.NumberField({label:'Split at Header'}).toFormGroup({},{name:'level',value:level,choices:{1:1,2:2,3:3,4:4,5:5}}).outerHTML,new foundry.data.fields.StringField({label:'Create as Type'}).toFormGroup({},{name:'type',value:type??'text'}).outerHTML].join('')}</fieldset>`,answer=await foundry.applications.api.DialogV2.prompt({content,title:'Split Page by Headers',ok:{callback:(event,button)=>new FormDataExtended(button.form).object},position:{top:100},rejectClose:!0});pageuuid=answer.pageuuid,targetuuid=answer.targetuuid,level=answer.level,type=answer.type;const elementToSplitOn=`:is(${Array.from({length:level},((v,i)=>`h${i+1}`)).join(',')})`,page=await fromUuid(pageuuid),journal=await fromUuid(targetuuid);function nextUntil(elem,selector,filter){Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector);const siblings=[];for(elem=elem.nextElementSibling;elem&&!elem.matches(selector);){siblings.push(elem),elem=elem.nextElementSibling}return siblings}const div=document.createElement("div");div.innerHTML=page.text.content;const headings=div.querySelectorAll(elementToSplitOn),pageData=[];for(const heading of headings){let siblings=nextUntil(heading,elementToSplitOn),pageHTML="";for(const sibling of siblings){pageHTML+=sibling.outerHTML}pageData.push({type,name:heading.innerText??'(No Title)',"text.content":pageHTML,"title.level":heading.tagName.at(1)})}await journal.createEmbeddedDocuments("JournalEntryPage",pageData)}}class KeepIdItem extends CONFIG.Item.documentClass{static async create(data={},operation={}){return operation.keepId=!0,super.create(data,operation)}static get implementation(){return this}}class ItemExtractor extends ExtractorBase{static{Hooks.on('bkit.extractorEntries',(entries=>{entries.push({title:'Extract Item',action:'extract-item',cmd:()=>(new this).extract()})}))}nameFromChildren(childNodes){for(;childNodes.length>0;){const node=childNodes[0];let nodeText="";if(node.hasChildNodes()?(nodeText=this.nameFromChildren(node.childNodes),node.hasChildNodes()||node.remove()):(nodeText=node.textContent.trim().replace(/[^\w\d\)]\.*$/,""),node.remove()),nodeText.length>0){return nodeText}}}async extract(){const{range:fullRange=null}=this.getSelection(),fragment=fullRange.cloneContents(),wrapper=document.createElement("div");wrapper.appendChild(fragment);let name=this.nameFromChildren(wrapper.childNodes);const caption=name;name=name.replace('’',"'");const result=/\s*\((?<value>\d*,?\d+) (?<denomination>[PGESC]P)\)/.exec(name);let price={value:'0',denomination:'gp'};if(result&&(name=name.substring(0,result.index).trim(),price.value=result.groups.value.replace(',',''),price.denomination=result.groups.denomination.toLowerCase()),name.length<1){return void ui.notifications.error("Could not identify valid document name from selection")}const answer=await this.promptContext('Item');if(!answer){return}if(!['H1','H2','H3','P'].includes(wrapper.firstChild.nodeName)){const parawrapper=document.createElement("p");parawrapper.replaceChildren(...wrapper.childNodes),wrapper.replaceChildren(parawrapper)}let itemLevel,description=wrapper.innerHTML.trim();/\((?<use>[\w\d\s]+)\)\./.exec(name)&&(name=name.substring(0,result.index).trim(),description=`<p><strong>${result.groups.use}</strong></p>`+description);const levelResult=/level\s(?<level>\d\d?)\:?/i.exec(name);levelResult&&(name=levelResult.input.replace(levelResult[0],"").trim(),itemLevel=Number(levelResult.groups.level));const data=foundry.utils.expandObject({_id:this.genID(name,answer.prefix),type:answer.type??'feat',folder:answer.folder,name,"system.description.value":description,"system.price":price,"system.prerequisites.level":itemLevel}),context=this.validateTarget({id:data._id,type:'Item',target:answer.target}),item=await KeepIdItem.createDialog(data,context),embedText=`@Embed[${item.uuid} classes="caption-top item-card"]{${caption}}`;navigator.clipboard.writeText(embedText),ui.notifications.info(`"${embedText}" written to clipboard.`),await game.user.setFlag('bkit','Item-extractor',{type:item.type,folder:item.folder?.id})}}class TableExtractor extends ExtractorBase{static{Hooks.on('bkit.extractorEntries',(entries=>{entries.push({title:'Extract Table',action:'extract-table',cmd:(state,dispatch,view)=>this.extract(state,view)})}))}static async extract(state,view){const cursor=view.domAtPos(state.selection.anchor).node;new this((cursor?.nodeType===cursor.TEXT_NODE?cursor.parentElement:cursor).closest('table')).parse()}table=null;extract={name:'(No Title)'};embed={resultLabel:null};constructor(tableElement){super(),this.table=tableElement,this.lines=this._extract()}async parse(){const answers=await this.promptContext('RollTable'),lines=foundry.utils.duplicate(this.lines),name=lines.shift().trim().replace('’',"'").replace().replace('“','"').replace('”','"'),id=this.genID(name,answers.prefix);await this.validateTarget({id,type:'RollTable',target:answers.target});const formula=lines.shift(),resultLabel=lines.shift().replace(/\<[^\>]*\>/g,'').trim(),rawPairs=[];for(;lines.length;){const range=lines.shift(),resultLines=[];do{resultLines.push(lines.shift())}while(this.parseRange(lines.at(0)).some(isNaN));const text=resultLines.join();rawPairs.push([range,text])}const results=rawPairs.map((([range,value])=>this._createEntry(range,value))),data={_id:id,name,results,formula};await RollTable.create(data,{pack:answers.targetPack,keepId:!0}).then((table=>{table.sheet.render(!0),navigator.clipboard.writeText(`@Embed[${table.uuid} rollable classes="caption-top" resultLabel="${resultLabel}"]{${name}}`)}))}_createEntry(range,value){return{type:0,text:value,range:this.parseRange(range)}}_discoverTitle(){let node=this.table;for(;!node.previousElementSibling;){node=node.parentElement}return node.classList.contains('ProseMirror')?this.extract.name:node?.previousElementSibling?.textContent.trim()??this.extract.name}_extract(){const entries=[];this.table.querySelector('caption')?entries.push([this.table.querySelector('caption').innerText.trim()]):entries.push([this._discoverTitle()]);const rows=this.table.getElementsByTagName('tr');for(const row of rows){const headers=row.getElementsByTagName('th');if(headers.length){const[first,...rest]=headers,result=rest.map((e=>e.innerText)).join('');entries.push([first.innerText.trim(),result.trim()])}const cells=row.getElementsByTagName('td');if(cells.length){const[first,...rest]=cells,result=rest.map((e=>e.innerHTML)).join('');entries.push([first.innerText.trim(),result.trim()])}}return console.debug(entries),entries.flat()}}class ProseMirrorExtractor{static{Hooks.on('getProseMirrorMenuDropDowns',((proseMirrorMenu,dropdowns)=>{const entries=[];Hooks.callAll('bkit.extractorEntries',entries),dropdowns.bkit={action:'badger',title:'<i class="fa-solid fa-helmet-safety"></i>',entries}}))}}class DataView extends foundry.applications.api.ApplicationV2{static DEFAULT_OPTIONS={window:{resizable:!0},actions:{jsonclick:(evt,target)=>{if(target.lastFocusedItem&&'path'in target.lastFocusedItem.dataset){const root=target.dataset.path,inner=target.lastFocusedItem.dataset.path,path=root+inner;navigator.clipboard.writeText(path),console.log(`"${path}" copied to clipboard with value:`,foundry.utils.getProperty(target.data,inner))}}}};static{Hooks.on('getHeaderControlsApplicationV2',((app,controls)=>{controls.push({icon:'fa-solid fa-magnifying-glass',label:'Inspect Data',onClick:()=>new this({document:app.options.document}).render({force:!0}),visible:()=>app.options.document})}))}static TABS={"app":{initial:'core',tabs:[{id:'core',icon:'fa-solid fa-file-code',label:'Core',path:''},{id:'system',icon:'fa-solid fa-book',label:'System',path:'system.'},{id:'flags',icon:'fa-solid fa-flag',label:'Flags',path:'flags.'},{id:'roll',icon:'fa-solid fa-dice',label:'Roll Data',functionName:'getRollData',path:'@'}]}};_initializeApplicationOptions(options){return(options=super._initializeApplicationOptions(options)).window.title=`Inspecting ${options.document.documentName}: ${options.document.name}`,options}async _onFirstRender(context,options){return'apps'in(options.document??{})&&(options.document.apps[this.id]=this),super._onFirstRender(context,options)}_onClose(options){return'apps'in(this.options.document??{})&&delete this.options.document.apps[this.id],super._onClose(options)}async _prepareContext(options){const context=await super._prepareContext(options),{system,flags,...core}=this.options.document.toObject(),roll=await(this.options.document.getRollData?.());return context.core=foundry.utils.isEmpty(core)?null:JSON.stringify(core),context.system=foundry.utils.isEmpty(system)?null:JSON.stringify(system),context.flags=foundry.utils.isEmpty(flags)?null:JSON.stringify(flags),context.roll=foundry.utils.isEmpty(roll)?null:JSON.stringify(roll),context}async _renderHTML(context,options){const navHTML=await renderTemplate("templates/generic/tab-navigation.hbs",context),views=Object.values(context.tabs).map((({id,cssClass="",functionName=null,path=""})=>{const container=document.createElement('div');container.dataset.group='app',container.dataset.tab=id;const clsNames=cssClass.split(" ").filter((e=>e));if(clsNames.push('tab','scrollable'),foundry.utils.isEmpty(context[id])){const note=document.createElement('p');note.innerHTML=`<em><strong>#${functionName??id}</strong> member ${functionName?'function':''} empty or missing.</em>`,note.classList.add('notification'),container.appendChild(note)}else{const view=document.createElement('json-viewer');view.innerText=context[id],view.dataset.action="jsonclick",view.dataset.path=path,container.appendChild(view)}return container.classList.add(...clsNames),container}));return views.unshift(navHTML),views}_replaceHTML([navHTML,...views],content,options){content.replaceChildren(...views),content.insertAdjacentHTML('afterbegin',navHTML)}}Hooks.once('ready',(async()=>{'dnd5e'===game.system.id?(await import('./index-Cj2t9j4v.js'),ui.notifications.success(`Common and '${game.system.id}' utilities initialized`)):ui.notifications.info('Common utilities initialized')}));
//# sourceMappingURL=index.mjs.map
